[{"/Users/kaichiangchang/Documents/dev/line-format/src/index.js":"1","/Users/kaichiangchang/Documents/dev/line-format/src/App.js":"2","/Users/kaichiangchang/Documents/dev/line-format/src/LineData.js":"3","/Users/kaichiangchang/Documents/dev/line-format/src/components/Navigator/index.jsx":"4","/Users/kaichiangchang/Documents/dev/line-format/src/components/Content/index.jsx":"5","/Users/kaichiangchang/Documents/dev/line-format/src/components/pages/Table/index.jsx":"6","/Users/kaichiangchang/Documents/dev/line-format/src/components/pages/TableSp1/index.jsx":"7","/Users/kaichiangchang/Documents/dev/line-format/src/components/pages/Unit/index.jsx":"8","/Users/kaichiangchang/Documents/dev/line-format/src/components/AddNew/index.jsx":"9","/Users/kaichiangchang/Documents/dev/line-format/src/components/AddNew/AddUnit/index.jsx":"10","/Users/kaichiangchang/Documents/dev/line-format/src/components/AddNew/AddList/index.jsx":"11"},{"size":271,"mtime":1612274916000,"results":"12","hashOfConfig":"13"},{"size":310,"mtime":1612584185000,"results":"14","hashOfConfig":"13"},{"size":17216,"mtime":1612684302000,"results":"15","hashOfConfig":"13"},{"size":3352,"mtime":1612584185000,"results":"16","hashOfConfig":"13"},{"size":821,"mtime":1612584185000,"results":"17","hashOfConfig":"13"},{"size":1413,"mtime":1612584185000,"results":"18","hashOfConfig":"13"},{"size":1153,"mtime":1612584185000,"results":"19","hashOfConfig":"13"},{"size":305,"mtime":1612458039000,"results":"20","hashOfConfig":"13"},{"size":5065,"mtime":1612684149000,"results":"21","hashOfConfig":"13"},{"size":323,"mtime":1612584185000,"results":"22","hashOfConfig":"13"},{"size":448,"mtime":1612682766000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1gpmngf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kaichiangchang/Documents/dev/line-format/src/index.js",[],["48","49"],"/Users/kaichiangchang/Documents/dev/line-format/src/App.js",[],"/Users/kaichiangchang/Documents/dev/line-format/src/LineData.js",[],"/Users/kaichiangchang/Documents/dev/line-format/src/components/Navigator/index.jsx",[],"/Users/kaichiangchang/Documents/dev/line-format/src/components/Content/index.jsx",[],"/Users/kaichiangchang/Documents/dev/line-format/src/components/pages/Table/index.jsx",[],"/Users/kaichiangchang/Documents/dev/line-format/src/components/pages/TableSp1/index.jsx",[],"/Users/kaichiangchang/Documents/dev/line-format/src/components/pages/Unit/index.jsx",[],"/Users/kaichiangchang/Documents/dev/line-format/src/components/AddNew/index.jsx",["50","51"],"import React, { Component } from 'react'\nimport { Route, withRouter } from 'react-router-dom'\nimport './index.css'\nimport AddUnit from './AddUnit'\nimport AddList from './AddList'\nimport { nanoid } from 'nanoid'\n\nclass AddNew extends Component {\n\n    state = {\n        datas: [],\n        results: [],\n        errorIds: [],\n        finalResult: {}\n    }\n\n    /** 設定表單完成 */\n    submitForm = () => {\n        const {name, row, column} = this\n        if(!name.value || !row.value || !column.value)\n            return\n\n        this.setState(state => state.result = {[name.value]: 1})\n        this.props.history.push({pathname: '/addNew/newTable', state: {name: name.value, row: row.value*1, column: column.value*1}})\n    }\n\n    /** 選取格子後的提交 */\n    submitChoose = () => {\n        const {value} = this.lineName        \n        const {datas, results} = this.state\n\n        if(!value || !datas.length)\n            return\n\n        this.setState({datas: [], results: [...results, {id: nanoid(), lineNo: value, datas: datas.sort((a, b) => a.split(',')[0]*1 - b.split(',')[0]*1 )}]})\n        this.lineName.value = value *1 +1\n    }\n\n    /** 檢查是否有重複的lineNo */\n    checkResult = () => {\n        const {results} = this.state\n        const lineNoArr = results.map(result => result.lineNo)\n        return !lineNoArr.find((lineNo, index) => lineNoArr.indexOf(lineNo) != index)\n    }\n\n    confirmResult = () => {\n        const {results, errorIds} = this.state \n        errorIds.length = 0\n        if(!this.checkResult()){\n            const lineNoArr = results.map(result => result.lineNo)\n            results.filter((result, index) => lineNoArr.indexOf(result.lineNo) != index).map(result => errorIds.push(result.id))\n            this.setState({errorIds: errorIds})\n            return\n        }\n\n        const finalLines = {}\n        results.map(result => finalLines[result.lineNo] = result.datas.map(data => Array.from(data.split(',').map(arr => arr * 1))))\n        this.setState({finalResult: {\n            [this.name.value]: finalLines}\n        })\n    }\n\n    /** 每一格點擊的事件 */\n    unitClick = (columnIndex, rowIndex) => {\n        return () => {\n            this.setState(state => {\n                const _join = [columnIndex, rowIndex].join()\n                return state.datas.includes(_join)? state.datas.splice(state.datas.indexOf(_join), 1): state.datas.push(_join)\n            })\n        }\n    }\n\n    /** 移除指定的線 */\n    removeItem = (target) => {\n        return ()=>{\n            const {results} = this.state\n            this.setState({results: results.filter(result => result.id !== target)})\n        }\n    }\n\n    render() {\n        const {results, datas, errorIds, finalResult} = this.state\n        return (\n            <div>\n                {/* 顯示表格的尺寸 */}\n                <div id=\"add-new\">\n                    <span className='input-span'>命名: <input type=\"text\" style={{width: '150px'}} placeholder='線的名稱' ref={c => this.name = c}/></span>\n                    <span className='input-span'><input type=\"number\" ref={c => this.row = c}/>列</span>\n                    <span className='input-span'><input type=\"number\" ref={c => this.column = c}/>行</span>\n                    <button onClick={this.submitForm}>送出</button>\n                </div>\n                <hr/>\n\n                {/* 顯示可以點選的格子 */}\n                <Route path='/addNew/newTable' render={props =>{\n                    const {name, row, column} = props.location.state\n                    return (\n                    <div>\n                        <h2>{name}</h2>\n                        <ul>\n                            {Array(column).fill(1).map((_, columnIndex) =>\n                                <li key={nanoid()}>{Array(row).fill(1).map((_, rowIndex) =>\n                                    <AddUnit key={nanoid()} active={datas.includes([columnIndex, rowIndex].join())} clickEvent={this.unitClick(columnIndex, rowIndex)}/>\n                                )}</li>\n                            )}\n                        </ul>\n                        <span className='input-span'>第<input type=\"number\" ref={c => this.lineName = c}/>線</span>\n                        <button onClick={this.submitChoose}>送出</button>\n                    </div>\n                    )\n                }}/>\n                <hr/>\n\n                {/* 顯示每一條線的結果 */}\n                <h2>Result:</h2>\n                <ul style={{width: '500px', position: 'relative'}}>\n                    {results.map(result => <AddList key={nanoid()} result={result} removeEvent={this.removeItem} isError={errorIds.includes(result.id)}/>)}\n                    <li><button id=\"confirm\" onClick={this.confirmResult}> 確認 </button></li>\n                </ul>\n                <hr/>\n\n                {/* 顯示最終結果 */}\n                <h2>輸出結果</h2>\n                <span>{JSON.stringify(finalResult, null, '\\t')}</span>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AddNew)","/Users/kaichiangchang/Documents/dev/line-format/src/components/AddNew/AddUnit/index.jsx",[],"/Users/kaichiangchang/Documents/dev/line-format/src/components/AddNew/AddList/index.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":43,"column":77,"nodeType":"58","messageId":"59","endLine":43,"endColumn":79},{"ruleId":"56","severity":1,"message":"57","line":51,"column":80,"nodeType":"58","messageId":"59","endLine":51,"endColumn":82},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]